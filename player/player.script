local PlayerStateMachine = require('player.playerStates.playerStateMachine')
local PlayerIdleState = require('player.playerStates.playerIdleState')
local PlayerMoveState = require('player.playerStates.playerMoveState')

go.property("speed", 100)

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed

    self.keyTable = {}
    self.direction = { x = 0, y = 0 }
    self.moveVector = vmath.vector3()
    self.spriteUrl = msg.url("#playerSprite")

    local idleState = PlayerIdleState.new(self)
    local moveState = PlayerMoveState.new(self)

    local stateList = { idle = idleState, move = moveState }

    self.playerStateMachine = PlayerStateMachine.new()

    self.playerStateMachine:initialize(idleState, stateList)

	msg.post(".", "acquire_input_focus")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed

    msg.post(".", "release_input_focus")

    if self.playerStateMachine then
        self.playerStateMachine:shutdown()
    end
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed

    if self.playerStateMachine then
        local currentState = self.playerStateMachine:getCurrentState()
        if currentState then
            currentState:update(dt)
        end
    end
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed

    if self.playerStateMachine then
        local currentState = self.playerStateMachine:getCurrentState()
        if currentState then
            currentState:fixed_update(dt)
        end
    end
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed

    if self.playerStateMachine then
        local currentState = self.playerStateMachine:getCurrentState()
        if currentState then
            currentState:on_message(message_id, message, sender)
        end
    end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed

    if self.playerStateMachine then
        local currentState = self.playerStateMachine:getCurrentState()
        if currentState then
            currentState:on_input(action_id, action)
        end
    end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
